diff --git a/Modules/Order/resources/views/index.blade.php b/Modules/Order/resources/views/index.blade.php
index f5dbd7f..782a169 100644
--- a/Modules/Order/resources/views/index.blade.php
+++ b/Modules/Order/resources/views/index.blade.php
@@ -1,7 +1,7 @@
 @extends('adminlte::page')
 
 @section('content')
-<div class="container mt-4">
+{{-- <div class="container mt-4">
     <h4 class="mb-3">Danh s√°ch ƒë∆°n h√†ng</h4>
 
     @if (session('success'))
@@ -51,5 +51,6 @@
 
     </div>
     
-</div>
+</div> --}}
+@livewire('order.order-list')
 @endsection
diff --git a/app/Helpers/TnvHelper.php b/app/Helpers/TnvHelper.php
index 6a0abb4..9423e3b 100644
--- a/app/Helpers/TnvHelper.php
+++ b/app/Helpers/TnvHelper.php
@@ -8,6 +8,9 @@ use PhpOffice\PhpSpreadsheet\Style\Alignment;
 use PhpOffice\PhpSpreadsheet\Style\Fill;
 use PhpOffice\PhpSpreadsheet\Style\Border;
 use Illuminate\Database\Eloquent\Model;
+use Illuminate\Support\Facades\Storage;
+use Illuminate\Support\Facades\Log;
+use Symfony\Component\HttpFoundation\StreamedResponse;
 
 class TnvHelper
 {
@@ -188,4 +191,37 @@ class TnvHelper
         }
         return $letter;
     }
+
+    public static function downloadFile(string $path, string $disk = 'public', ?string $downloadName = null)
+    {
+        try {
+            if (!Storage::disk($disk)->exists($path)) {
+                Log::warning("‚ùå File kh√¥ng t·ªìn t·∫°i tr√™n disk [{$disk}]: {$path}");
+                return back()->with('error', '‚ùå File kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã x√≥a.');
+            }
+
+            $fullPath = Storage::disk($disk)->path($path);
+            $downloadName = $downloadName ?? basename($path);
+
+            // ‚úÖ ƒê·∫£m b·∫£o kh√¥ng c√≥ buffer l√†m h·ªèng file binary
+            while (ob_get_level()) ob_end_clean();
+
+            return response()->streamDownload(function () use ($fullPath) {
+                $handle = fopen($fullPath, 'rb');
+                fpassthru($handle);
+                fclose($handle);
+            }, $downloadName, [
+                'Content-Type' => mime_content_type($fullPath) ?: 'application/octet-stream',
+                'Cache-Control' => 'no-store, no-cache, must-revalidate',
+                'Pragma' => 'no-cache',
+            ]);
+        } catch (\Throwable $e) {
+            Log::error('‚ùå L·ªói khi t·∫£i file: ' . $e->getMessage(), [
+                'path' => $path,
+                'disk' => $disk,
+                'trace' => $e->getTraceAsString(),
+            ]);
+            return back()->with('error', '‚ö†Ô∏è X·∫£y ra l·ªói khi t·∫£i file.');
+        }
+    }
 }
diff --git a/app/Helpers/TnvMedicineHelper.php b/app/Helpers/TnvMedicineHelper.php
index fcfe10b..cf6caf9 100644
--- a/app/Helpers/TnvMedicineHelper.php
+++ b/app/Helpers/TnvMedicineHelper.php
@@ -143,8 +143,9 @@ class TnvMedicineHelper
             : $fetch();
     }
 
-    public static function exportWithTemplate(array $options = [])
+    public static function exportWithTemplate(array $options = [], string $type = 'xls')
     {
+       
         // ----- 1Ô∏è‚É£ M·∫∑c ƒë·ªãnh c√°c tham s·ªë -----
         $defaultColumns = [
             ['field' => 'stt_tt20_2022', 'title' => 'STT TT20/2022'],
@@ -174,35 +175,44 @@ class TnvMedicineHelper
             'titles'       => [
                 ['cell' => 'A6', 'text' => 'B·∫¢NG B√ÅO GI√Å', 'style' => ['bold' => true, 'size' => 28, 'align' => 'center'], 'merge' => 'A6:N6'],
                 ['cell' => 'L12', 'text' => 'TP.HCM, ng√†y ' . now()->day . ' th√°ng ' . now()->month . ' nƒÉm ' . now()->year, 'style' => ['align' => 'right']],
-                ['cell' => 'J13', 'text' => 'PH√íNG KINH DOANH', 'style' => ['bold' => true, 'align' => 'center']]
+                ['cell' => 'J12', 'text' => 'PH√íNG KINH DOANH', 'style' => ['bold' => true, 'align' => 'center']],
+                ['cell' => 'J19', 'text' => 'T·ª™ NG·ªåC V√ÇN', 'style' => ['bold' => true, 'align' => 'center']]
             ],
             'images' => [
                 ['path' => storage_path('app/logo.png'), 'cell' => 'B1', 'width_in' => 1.86, 'height_in' => 1.18, 'offsetX' => 0, 'offsetY' => 0],
                 ['path' => storage_path('app/ck.png'), 'cell' => 'L14', 'width_in' => 2, 'height_in' => 1.33, 'offsetX' => 0, 'offsetY' => 0],
             ],
-            'selectedId' => [], // ‚Üê th√™m ·ªü ƒë√¢y
+            'selectedId' => [], // danh s√°ch s·∫£n ph·∫©m
         ];
 
         $options = array_merge($defaults, $options);
 
         // ----- 2Ô∏è‚É£ Ki·ªÉm tra danh s√°ch s·∫£n ph·∫©m -----
         if (empty($options['selectedId'])) {
-            throw new \Exception('Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt s·∫£n ph·∫©m ƒë·ªÉ xu·∫•t Excel.');
+            throw new \Exception('Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt s·∫£n ph·∫©m ƒë·ªÉ xu·∫•t.');
         }
 
         // ----- 3Ô∏è‚É£ L·∫•y d·ªØ li·ªáu t·ª´ DB -----
         $fields = array_column($options['columns'], 'field');
         $data = Medicine::whereIn('id', $options['selectedId'])->get($fields);
-
         $options['data'] = $data;
 
-        // ----- 4Ô∏è‚É£ G·ªçi h√†m exportTemplate (b·∫°n ƒë√£ c√≥ s·∫µn trong class kh√°c) -----
-        if (!method_exists(static::class, 'exportTemplate') && !function_exists('exportTemplate')) {
-            throw new \Exception('H√†m exportTemplate ch∆∞a ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a ho·∫∑c include.');
-        }
-
-        return (new static)->exportTemplate($options);
+        // ----- 4Ô∏è‚É£ Xu·∫•t theo lo·∫°i -----
+        switch (strtolower($type)) {
+            case 'pdf':
+                if (!method_exists(static::class, 'exportTemplatePdf')) {
+                    throw new \Exception('H√†m exportTemplatePdf ch∆∞a ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a.');
+                }
+                
+                return (new static)->exportTemplatePdf($options);
 
+            case 'xls':
+            default:
+                if (!method_exists(static::class, 'exportTemplate')) {
+                    throw new \Exception('H√†m exportTemplate ch∆∞a ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a.');
+                }
+                return (new static)->exportTemplate($options);
+        }
     }
 
 }
diff --git a/app/Models/BangBaoGia.php b/app/Models/BangBaoGia.php
index 3dfec88..71cec34 100644
--- a/app/Models/BangBaoGia.php
+++ b/app/Models/BangBaoGia.php
@@ -36,29 +36,27 @@ class BangBaoGia extends Model
     // üî• Khi t·∫°o b·∫£ng b√°o gi√° m·ªõi => t·ª± ƒë·ªông export file Excel
     protected static function booted()
     {
-        static::created(function ($model) {
+        static::created(function ($record) {
             try {
+                // ‚úÖ T·ª± ƒë·ªông xu·∫•t file Excel khi t·∫°o m·ªõi
                 $file = TnvMedicineHelper::exportWithTemplate([
-                    'selectedId'    => $model->product_ids ?? [],
-                    'customer_name' => $model->ten_khach_hang,
-                    'note'          => $model->ghi_chu,
+                    'selectedId'    => $record->product_ids,
+                    'customer_name' => $record->ten_khach_hang,
+                    'note'          => $record->ghi_chu,
+                    'fileName'      => 'Bao_gia_' . now()->format('Ymd_His') . '.xlsx',
                 ]);
 
-                $path = null;
-                if (is_array($file) && isset($file['path'])) {
-                    $path = $file['path'];
-                } elseif (is_string($file)) {
-                    $path = $file;
-                }
-
-                if ($path) {
-                    $model->update([
-                        'file_path'   => $path,
+                if (!empty($file['path'])) {
+                    $record->update([
+                        'file_path'   => $file['path'],
                         'exported_at' => now(),
                     ]);
                 }
-            } catch (\Throwable $th) {
-                \Log::error('‚ùå L·ªói t·∫°o file b√°o gi√° t·ª± ƒë·ªông: ' . $th->getMessage());
+            } catch (\Throwable $e) {
+                \Log::error('‚ùå L·ªói xu·∫•t b√°o gi√° t·ª± ƒë·ªông', [
+                    'error' => $e->getMessage(),
+                    'id'    => $record->id,
+                ]);
             }
         });
     }
diff --git a/app/Models/Order.php b/app/Models/Order.php
index 51299bf..f2ec6fd 100644
--- a/app/Models/Order.php
+++ b/app/Models/Order.php
@@ -9,7 +9,7 @@ use Illuminate\Support\Facades\Storage;
 use Barryvdh\DomPDF\Facade\Pdf;
 use App\Mail\OrderCreatedMail;
 use App\Mail\OrderConfirmedMail; // t·∫°o mail m·ªõi k√®m link PDF
-
+ 
 class Order extends Model
 {
     use HasFactory;
diff --git a/app/Traits/HasExcelExportTemplate.php b/app/Traits/HasExcelExportTemplate.php
index 873c2ae..687a635 100644
--- a/app/Traits/HasExcelExportTemplate.php
+++ b/app/Traits/HasExcelExportTemplate.php
@@ -194,12 +194,32 @@ trait HasExcelExportTemplate
         if (!empty($font['bold'])) $fontStyle->setBold(true);
         if (!empty($font['color'])) $fontStyle->getColor()->setRGB($font['color']);
 
-        // ====== 7Ô∏è‚É£ Xu·∫•t file ======
+          // === 7Ô∏è‚É£ L∆∞u file v√†o storage ===
         $fileName = $options['fileName'] ?? ('Bao_gia_' . now()->format('Ymd_His') . '.xlsx');
-        $filePath = storage_path("app/{$fileName}");
+        $storageDir = 'baogia'; // Kh√¥ng c√≥ 'public/'
+        $filePath = $storageDir . '/' . $fileName;
+
+        // ‚úÖ ƒê·∫£m b·∫£o th∆∞ m·ª•c t·ªìn t·∫°i trong disk public
+        \Storage::disk('public')->makeDirectory($storageDir);
+
+        // ‚úÖ ƒê∆∞·ªùng d·∫´n v·∫≠t l√Ω tuy·ªát ƒë·ªëi trong storage/app/public
+        $fullPath = storage_path('app/public/' . $filePath);
+
+        // ‚úÖ Ghi file ra ƒë√∫ng v·ªã tr√≠
+        $writer = new \PhpOffice\PhpSpreadsheet\Writer\Xlsx($spreadsheet);
+        $writer->save($fullPath);
+
+        // ‚úÖ Tr·∫£ v·ªÅ th√¥ng tin file (ƒë√∫ng chu·∫©n Laravel)
+        return [
+            'disk' => 'public',
+            'path' => $filePath, // => baogia/Bao_gia_20251029_111230.xlsx
+            'full_path' => $fullPath,
+            'url'  => asset('storage/' . $filePath), // c√≥ th·ªÉ hi·ªÉn th·ªã link n·∫øu c·∫ßn
+            'name' => $fileName,
+        ];
+
+
 
-        (new Xlsx($spreadsheet))->save($filePath);
-        return response()->download($filePath)->deleteFileAfterSend(true);
     }
 
 
@@ -279,4 +299,166 @@ trait HasExcelExportTemplate
         $drawing->setWorksheet($sheet);
     }
 
+    public function exportTemplatePdf(array $options)
+    {
+        $excelFileInfo = $this->exportTemplate($options); // T·∫°o Excel tr∆∞·ªõc
+        $fullPath = $excelFileInfo['full_path'] ?? null;
+
+        if (!$fullPath || !file_exists($fullPath)) {
+            abort(404, "File Excel kh√¥ng t·ªìn t·∫°i ƒë·ªÉ convert sang PDF.");
+        }
+
+        $spreadsheet = IOFactory::load($fullPath);
+        $sheet = $spreadsheet->getActiveSheet();
+
+        $highestRow = $sheet->getHighestRow();
+        $highestColumn = $sheet->getHighestColumn();
+        $highestColumnIndex = Coordinate::columnIndexFromString($highestColumn);
+
+        // T√≠nh t·ªïng width c·ªßa c√°c c·ªôt ƒë·ªÉ scale sang %
+        $colWidths = [];
+        $totalWidth = 0;
+        for ($col = 1; $col <= $highestColumnIndex; $col++) {
+            $colLetter = Coordinate::stringFromColumnIndex($col);
+            $width = $sheet->getColumnDimension($colLetter)->getWidth();
+            if (!$width) $width = 10; // default n·∫øu kh√¥ng set width
+            $colWidths[$col] = $width;
+            $totalWidth += $width;
+        }
+
+        // Build HTML table
+        $html = '<!DOCTYPE html>
+    <html>
+    <head>
+    <meta charset="utf-8">
+    <style>
+    table { border-collapse: collapse; width: 100%; table-layout: fixed; }
+    td, th { border: 1px solid #000; padding: 4px; word-wrap: break-word; vertical-align: middle; }
+    </style>
+    </head>
+    <body>
+    <table>';
+
+        // Build HTML for images
+        $imagesHtml = '';
+        foreach ($sheet->getDrawingCollection() as $drawing) {
+            if ($drawing instanceof Drawing) {
+                $coordinates = $drawing->getCoordinates();
+                $path = $drawing->getPath();
+                if (file_exists($path)) {
+                    $type = pathinfo($path, PATHINFO_EXTENSION);
+                    $data = base64_encode(file_get_contents($path));
+                    $imagesHtml .= "<img src='data:image/{$type};base64,{$data}' style='position:absolute;' />";
+                }
+            }
+        }
+
+        $mergeCells = $sheet->getMergeCells();
+
+        for ($row = 1; $row <= $highestRow; $row++) {
+            $html .= '<tr>';
+            for ($col = 1; $col <= $highestColumnIndex; $col++) {
+                $cell = $sheet->getCellByColumnAndRow($col, $row);
+                $cellValue = $cell->getFormattedValue();
+
+                // Skip merged cells except top-left
+                $isMerged = false;
+                foreach ($mergeCells as $mergeRange) {
+                    if ($cell->isInRange($mergeRange)) {
+                        $rangeParts = explode(':', $mergeRange);
+                        if ($cell->getCoordinate() !== $rangeParts[0]) {
+                            $isMerged = true;
+                            break;
+                        }
+                    }
+                }
+                if ($isMerged) continue;
+
+                $style = $sheet->getStyleByColumnAndRow($col, $row);
+                $font = $style->getFont();
+                $bold = $font->getBold() ? 'font-weight:bold;' : '';
+                $size = $font->getSize() ? "font-size:{$font->getSize()}pt;" : '';
+                $color = $font->getColor()->getRGB() ? "color:#{$font->getColor()->getRGB()};" : '';
+                $fontFamily = "font-family:{$font->getName()};";
+
+                // Alignment
+                $align = match ($style->getAlignment()->getHorizontal()) {
+                    \PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_CENTER => 'text-align:center;',
+                    \PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_RIGHT  => 'text-align:right;',
+                    default => 'text-align:left;',
+                };
+                $valign = match ($style->getAlignment()->getVertical()) {
+                    \PhpOffice\PhpSpreadsheet\Style\Alignment::VERTICAL_CENTER => 'vertical-align:middle;',
+                    \PhpOffice\PhpSpreadsheet\Style\Alignment::VERTICAL_BOTTOM => 'vertical-align:bottom;',
+                    default => 'vertical-align:top;',
+                };
+
+                // Background color
+                $fill = $style->getFill();
+                $bgColor = '';
+                if ($fill->getFillType() !== null && $fill->getStartColor()->getRGB() !== 'FFFFFF') {
+                    $bgColor = "background-color:#" . $fill->getStartColor()->getRGB() . ";";
+                }
+
+                // Merge cells
+                $rowspan = 1;
+                $colspan = 1;
+                foreach ($mergeCells as $mergeRange) {
+                    if ($cell->isInRange($mergeRange)) {
+                        $rangeParts = explode(':', $mergeRange);
+                        if ($cell->getCoordinate() === $rangeParts[0]) {
+                            $first = Coordinate::coordinateFromString($rangeParts[0]);
+                            $last = Coordinate::coordinateFromString($rangeParts[1]);
+                            $rowspan = $last[1] - $first[1] + 1;
+                            $colspan = Coordinate::columnIndexFromString($last[0]) - Coordinate::columnIndexFromString($first[0]) + 1;
+                            break;
+                        }
+                    }
+                }
+
+                // T√≠nh width % d·ª±a tr√™n t·ªïng width v√† colspan
+                $cellWidth = 0;
+                for ($i = 0; $i < $colspan; $i++) {
+                    $cellWidth += $colWidths[$col + $i] ?? 10;
+                }
+                $widthPercent = round($cellWidth / $totalWidth * 100, 2);
+
+                $html .= "<td rowspan='{$rowspan}' colspan='{$colspan}' style='width:{$widthPercent}%;{$bold}{$size}{$color}{$fontFamily}{$align}{$valign}{$bgColor}'>";
+                $html .= htmlspecialchars($cellValue);
+                $html .= "</td>";
+            }
+            $html .= '</tr>';
+        }
+
+        $html .= '</table>' . $imagesHtml . '</body></html>';
+
+        // Kh·ªüi t·∫°o MPDF
+        $mpdf = new \Mpdf\Mpdf([
+            'mode' => 'utf-8',
+            'format' => 'A4-L',
+            'margin_left' => 10,
+            'margin_right' => 10,
+            'margin_top' => 10,
+            'margin_bottom' => 10,
+        ]);
+
+        $mpdf->WriteHTML($html);
+
+        $fileName = $options['pdfFileName'] ?? str_replace('.xlsx', '.pdf', $excelFileInfo['name']);
+        $storageDir = 'baogia';
+        \Storage::disk('public')->makeDirectory($storageDir);
+        $pdfPath = $storageDir . '/' . $fileName;
+
+        $mpdf->Output(storage_path('app/public/' . $pdfPath), \Mpdf\Output\Destination::FILE);
+
+        return [
+            'disk' => 'public',
+            'path' => $pdfPath,
+            'full_path' => storage_path('app/public/' . $pdfPath),
+            'url'  => asset('storage/' . $pdfPath),
+            'name' => $fileName,
+        ];
+    }
+
+
 }
diff --git a/component-template.md b/component-template.md
index aeca217..1756dc0 100644
--- a/component-template.md
+++ b/component-template.md
@@ -1,33 +1,114 @@
 # üß© TEMPLATE M√î T·∫¢ COMPONENT LARAVEL + LIVEWIRE
 
-> üí° Ch·ªâ c·∫ßn copy m·∫´u n√†y, ƒëi·ªÅn th√¥ng tin v√†o c√°c ch·ªó `[ ... ]` r·ªìi g·ª≠i cho ChatGPT ƒë·ªÉ m√¨nh vi·∫øt component, view, route ho·∫∑c logic ho√†n ch·ªânh cho b·∫°n.
-
----
+## T·∫°o component : php artisan make:livewire Order.order-list
 
 ## 1Ô∏è‚É£. Th√¥ng tin Model
 
-- **Model t√™n:** `[T√™n Model, v√≠ d·ª•: Category]`
-- **B·∫£ng trong DB:** `[T√™n b·∫£ng n·∫øu kh√°c, v√≠ d·ª•: wp_categories]`
+- **Model t√™n:** `[Order]`
+- **B·∫£ng trong DB:** 
+
+        Schema::create('orders', function (Blueprint $table) {
+            $table->id();
+            $table->string('email');            
+            $table->unsignedBigInteger('user_id');
+            $table->json('order_detail'); // ch·ª©a m·∫£ng s·∫£n ph·∫©m d·∫°ng JSON
+            $table->decimal('total', 12, 2);
+            $table->enum('status', ['pending', 'confirmed', 'cancelled', 'finished'])->default('pending');
+            $table->text('order_note')->nullable();
+            $table->text('admin_note')->nullable();
+            $table->string('link_download')->nullable();
+            $table->timestamps();
+        });
 - **C√°c tr∆∞·ªùng ch√≠nh:**
   ```
-  id, name, slug, description, parent_id, image, created_at, updated_at
+    protected $fillable = [
+        'email',
+        'user_id',
+        'order_detail',
+        'order_note',
+        'admin_note',
+        'total',
+        'status',
+        'link_download'
+    ];
+
   ```
 - **Quan h·ªá (n·∫øu c√≥):**
-  - `[T√™n quan h·ªá]()` ‚Üí `[Lo·∫°i quan h·ªá]` (`hasMany`, `belongsTo`, `belongsToMany`, v.v.)
-  - V√≠ d·ª•:
-    - `children()` ‚Üí `hasMany(Category::class, 'parent_id')`
-    - `parent()` ‚Üí `belongsTo(Category::class, 'parent_id')`
+protected $casts = [
+        'order_detail' => 'array', // t·ª± ƒë·ªông decode JSON th√†nh m·∫£ng
+    ];
+
+    protected static function booted()
+    {
+        // üîπ Khi t·∫°o ƒë∆°n h√†ng m·ªõi
+        static::created(function ($order) {
+            if ($order->status == "pending") {
+                Mail::to($order->email)->send(new OrderCreatedMail($order));
+            }
+        });
+
+        // üîπ Khi c·∫≠p nh·∫≠t ƒë∆°n h√†ng
+        static::updated(function ($order) {
+            // Ch·ªâ x·ª≠ l√Ω khi confirmed v√† ch∆∞a c√≥ link_download
+            if ($order->status === 'confirmed' && !$order->link_download) {
+
+                // -----------------------------
+                // 1Ô∏è‚É£ T·∫°o th∆∞ m·ª•c theo ng√†y
+                // -----------------------------
+                $dateFolder = now()->format('Y-m-d');
+                $folderPath = "orders/{$dateFolder}";
+                if (!Storage::disk('public')->exists($folderPath)) {
+                    Storage::disk('public')->makeDirectory($folderPath);
+                }
+
+                // -----------------------------
+                // 2Ô∏è‚É£ T·∫°o PDF
+                // -----------------------------
+                try {
+                    $pdf = Pdf::loadView('pdf.order', [
+                        'order' => $order,
+                        'details' => $order->order_detail,
+                    ]);
+
+                    $fileName = 'order_' . $order->id . '_' . time() . '.pdf';
+                    $filePath = "{$folderPath}/{$fileName}";
+
+                    Storage::disk('public')->put($filePath, $pdf->output());
+
+                    // -----------------------------
+                    // 3Ô∏è‚É£ C·∫≠p nh·∫≠t link_download
+                    // -----------------------------
+                    $order->link_download = asset("storage/{$filePath}");
+                    $order->saveQuietly(); // tr√°nh loop updated
+
+                } catch (\Exception $e) {
+                    \Log::error('T·∫°o PDF th·∫•t b·∫°i: ' . $e->getMessage());
+                }
+
+                // -----------------------------
+                // 4Ô∏è‚É£ G·ª≠i email x√°c nh·∫≠n k√®m link PDF
+                // -----------------------------
+                try {
+                    Mail::to($order->email)->send(new OrderConfirmedMail($order));
+                } catch (\Exception $e) {
+                    \Log::error('G·ª≠i email th·∫•t b·∫°i: ' . $e->getMessage());
+                }
+            }
+        });
+    }
+
+    public function user()
+    {
+        return $this->belongsTo(User::class, 'email', 'email');
+    }
 
 ---
 
 ## 2Ô∏è‚É£. M·ª•c ti√™u component
 
-> M√¥ t·∫£ component c·∫ßn l√†m g√¨, v√≠ d·ª•:
+> M√¥ t·∫£ component:
 - Qu·∫£n l√Ω danh m·ª•c (th√™m, s·ª≠a, x√≥a, t√¨m ki·∫øm)
-- Import/export Excel
-- Upload ·∫£nh c√≥ preview
-- Hi·ªÉn th·ªã d·∫°ng c√¢y ho·∫∑c danh s√°ch
-- Ph√¢n trang, l·ªçc, s·∫Øp x·∫øp
+-Ph√¢n trang, l·ªçc, s·∫Øp x·∫øp
 
 ---
 
@@ -35,15 +116,13 @@
 
 > M√¥ t·∫£ b·ªë c·ª•c / style b·∫°n d√πng:
 
-- Giao di·ªán: `[AdminLTE / TailwindCSS / Bootstrap / Custom]`
-- C√≥ b·∫£ng danh s√°ch: `[C√≥/Kh√¥ng]`
-- C√≥ form th√™m/s·ª≠a: `[C√≥/Kh√¥ng]`
-- Form hi·ªÉn th·ªã d·∫°ng: `[Tab panel / accordion / ·∫©n hi·ªán khi nh·∫•n n√∫t]`
-- Kh√¥ng d√πng modal: `[ƒê√∫ng/Sai]`
-- C√≥ upload ·∫£nh: `[C√≥/Kh√¥ng]`
-- C√≥ preview ·∫£nh: `[C√≥/Kh√¥ng]`
-- Ch·ªçn danh m·ª•c cha d·∫°ng c√¢y checkbox: `[C√≥/Kh√¥ng]`
-- Khi b·∫•m H·ªßy ‚Üí quay l·∫°i danh s√°ch: `[ƒê√∫ng/Sai]`
+- Giao di·ªán: `[AdminLTE 3.1 / Bootstrap 4.6.1]`
+- C√≥ b·∫£ng danh s√°ch: `[C√≥g]`
+- C√≥ form t·∫°o ƒë∆°n h√†ng: `[C√≥]`
+- C√≥ form th√™m/s·ª≠a: `[C√≥]`
+- Form hi·ªÉn th·ªã d·∫°ng: `[·∫©n hi·ªán khi nh·∫•n n√∫t]`
+- Kh√¥ng d√πng modal: `[ƒê√∫ng]`
+- Khi b·∫•m H·ªßy ‚Üí quay l·∫°i danh s√°ch: `[ƒê√∫ng]`
 
 ---
 
@@ -51,11 +130,7 @@
 
 > Nh·ªØng h√†nh vi c·∫ßn c√≥ trong component:
 - Khi ch·ªçn checkbox cha ‚Üí t·ª± ƒë·ªông ch·ªçn t·∫•t c·∫£ con
-- Khi l∆∞u ‚Üí ki·ªÉm tra tr√πng `slug`
-- Khi s·ª≠a ‚Üí gi·ªØ nguy√™n ·∫£nh c≈© n·∫øu kh√¥ng thay
-- Khi h·ªßy ‚Üí reset form v√† ·∫©n form
-- Khi l∆∞u ‚Üí th√¥ng b√°o `toastr` ho·∫∑c `session()->flash`
-- Khi x√≥a ‚Üí x√°c nh·∫≠n b·∫±ng `confirm()` ho·∫∑c `sweetalert`
+
 
 ---
 
@@ -70,32 +145,3 @@
 - [ ] Seeder m·∫´u d·ªØ li·ªáu
 
 ---
-
-## 6Ô∏è‚É£. (T√πy ch·ªçn) ‚Äì D·ªØ li·ªáu m·∫´u
-
-> N·∫øu c√≥ th·ªÉ, b·∫°n g·ª≠i m·∫´u d·ªØ li·ªáu ho·∫∑c v√†i record:
-```json
-[
-  { "id": 1, "name": "Nh√≥m thu·ªëc", "slug": "nhom-thuoc" },
-  { "id": 2, "name": "Kh√°ng sinh", "slug": "khang-sinh", "parent_id": 1 }
-]
-```
-
----
-
-## ‚úÖ V√≠ d·ª• ƒëi·ªÅn m·∫´u ho√†n ch·ªânh
-
-**1Ô∏è‚É£ Model:**
-Category (id, name, slug, description, parent_id, image)
-
-**2Ô∏è‚É£ M·ª•c ti√™u:**
-T·∫°o component `CategoryManager` ƒë·ªÉ qu·∫£n l√Ω danh m·ª•c (th√™m, s·ª≠a, x√≥a, upload ·∫£nh, ch·ªçn danh m·ª•c cha d·∫°ng c√¢y).
-
-**3Ô∏è‚É£ Giao di·ªán:**
-D√πng AdminLTE, kh√¥ng d√πng modal, form hi·ªÉn th·ªã d·∫°ng tab, c√≥ preview ·∫£nh, khi h·ªßy quay v·ªÅ danh s√°ch.
-
-**4Ô∏è‚É£ Lu·ªìng x·ª≠ l√Ω:**
-Ki·ªÉm tra tr√πng slug, khi ch·ªçn cha ‚Üí ch·ªçn t·∫•t c·∫£ con, khi l∆∞u ‚Üí hi·ªán th√¥ng b√°o ‚ÄúL∆∞u th√†nh c√¥ng‚Äù.
-
-**5Ô∏è‚É£ K·∫øt qu·∫£ c·∫ßn:**
-Component + Blade view + Route.
diff --git a/config/menu.json b/config/menu.json
index 266bcbd..c5d604b 100644
--- a/config/menu.json
+++ b/config/menu.json
@@ -20,7 +20,13 @@
         "can": "admin-create"
     },
     {
-        "text": "Manage Medicine",
+        "text": "Qu\u1ea3n l\u00fd B\u00e1o gi\u00e1",
+        "url": "\/banggia",
+        "icon": "fas fa-fw fa-user",
+        "can": "admin-create"
+    },
+    {
+        "text": "Manage Medicine ",
         "url": "\/medicine",
         "icon": "fas fa-fw fa-user",
         "can": "admin-create"
diff --git a/database/exports/MAU-BANG-BAO-GIA.xlsx b/database/exports/MAU-BANG-BAO-GIA.xlsx
index 2ec8cbd..5fc3bf6 100644
Binary files a/database/exports/MAU-BANG-BAO-GIA.xlsx and b/database/exports/MAU-BANG-BAO-GIA.xlsx differ
diff --git a/database/migrations/2025_10_28_125833_create_bang_bao_gia_table.php b/database/migrations/2025_10_28_125833_create_bang_bao_gia_table.php
index 61c90b2..78ab11f 100644
--- a/database/migrations/2025_10_28_125833_create_bang_bao_gia_table.php
+++ b/database/migrations/2025_10_28_125833_create_bang_bao_gia_table.php
@@ -17,6 +17,7 @@ return new class extends Migration
             $table->string('file_path')->nullable()->comment('ƒê∆∞·ªùng d·∫´n file Excel ƒë√£ t·∫°o');
             $table->json('product_ids')->nullable()->comment('Danh s√°ch ID s·∫£n ph·∫©m');
             $table->text('ghi_chu')->nullable();
+            $table->enum('type', ['xls', 'pdf'])->default('xls');
             $table->timestamp('exported_at')->nullable()->comment('Th·ªùi ƒëi·ªÉm t·∫°o b·∫£ng b√°o gi√°');
             $table->timestamps();
 
diff --git a/resources/views/emails/orders/created.blade.php b/resources/views/emails/orders/created.blade.php
index c0e60ee..b1a98d1 100644
--- a/resources/views/emails/orders/created.blade.php
+++ b/resources/views/emails/orders/created.blade.php
@@ -1,4 +1,4 @@
-@component('mail::message')
+@component('mail::message') 
 # C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t h√†ng üéâ
 
 Xin ch√†o **{{ $order->email }}**,  
@@ -11,7 +11,11 @@ Xin ch√†o **{{ $order->email }}**,
 | S·∫£n ph·∫©m | SL | ƒêVT | Gi√° | Th√†nh ti·ªÅn |
 |:---------|:--:|:---:|----:|-----------:|
 @foreach ($order->order_detail as $item)
-| {{ $item['title'] }}-({{ $item['quy_cach'] }}) | {{ $item['quantity'] }} | {{ $item['dvt'] }}| {{ number_format($item['price'], 0, ',', '.') }} | {{ number_format($item['total'], 0, ',', '.') }} |
+| {{ $item['title'] ?? 'Ch∆∞a c√≥ t√™n' }} - ({{ $item['quy_cach'] ?? '-' }}) 
+| {{ $item['quantity'] ?? 1 }} 
+| {{ $item['dvt'] ?? '-' }} 
+| {{ number_format($item['price'] ?? 0, 0, ',', '.') }} 
+| {{ number_format($item['total'] ?? 0, 0, ',', '.') }} |
 @endforeach
 @endcomponent
 
diff --git a/resources/views/pdf/order.blade.php b/resources/views/pdf/order.blade.php
index 2b68151..afaec74 100644
--- a/resources/views/pdf/order.blade.php
+++ b/resources/views/pdf/order.blade.php
@@ -1,80 +1,145 @@
 <!DOCTYPE html>
-<html>
+<html lang="vi">
 <head>
     <meta charset="utf-8">
-    <title>ƒê∆°n h√†ng #{{ $order->id }}</title>
+    <title>Phi·∫øu xu·∫•t kho #{{ $order->id }}</title>
     <style>
+        @page {
+            margin: 25px 30px;
+        }
         body {
             font-family: DejaVu Sans, sans-serif;
-            font-size: 12px;
+            font-size: 13px;
             color: #333;
         }
-        h2 {
+        .header-table {
+            width: 100%;
+            border-collapse: collapse;
+            margin-bottom: 10px;
+        }
+        .header-table td {
+            vertical-align: top;
+            border: none;
+        }
+        .header-table img {
+            height: 60px;
+        }
+        h2.title {
             text-align: center;
-            margin-bottom: 20px;
+            margin: 15px 0;
+            font-size: 20px;
+            text-transform: uppercase;
         }
         .info {
             margin-bottom: 15px;
+            font-size: 13px;
         }
         .info p {
-            margin: 3px 0;
+            margin: 4px 0;
         }
-        table {
+        table.items {
             width: 100%;
             border-collapse: collapse;
-            margin-bottom: 20px;
+            margin-top: 10px;
         }
-        th, td {
+        table.items th, table.items td {
             border: 1px solid #333;
-            padding: 8px;
+            padding: 6px 8px;
             text-align: left;
         }
-        th {
-            background-color: #f2f2f2;
+        table.items th {
+            background-color: #f3f3f3;
+            text-align: center;
+        }
+        table.items td:nth-child(1),
+        table.items td:nth-child(3),
+        table.items td:nth-child(4),
+        table.items td:nth-child(5) {
+            text-align: center;
         }
         .total {
             text-align: right;
+            margin-top: 10px;
             font-weight: bold;
             font-size: 14px;
         }
+        .footer {
+            margin-top: 40px;
+            text-align: center;
+            font-size: 11px;
+            color: #555;
+        }
     </style>
 </head>
 <body>
 
-    <h2>H√ìA ƒê∆†N ƒê∆†N H√ÄNG #{{ $order->id }}</h2>
+    {{-- HEADER --}}
+    <table class="header-table">
+        <tr>
+            <td style="width: 60%;">
+                @php
+                    $logoPath = storage_path('app/logo.png');
+                @endphp
+                @if(file_exists($logoPath))
+                    <img src="{{ $logoPath }}" alt="Logo c√¥ng ty">
+                @else
+                    <strong>C√îNG TY TNHH INAFO VI·ªÜT NAM</strong>
+                @endif
+            </td>
+            <td style="text-align: right;">
+                <p><strong>Ng√†y:</strong> {{ now()->format('d/m/Y') }}</p>
+                <p><strong>S·ªë phi·∫øu:</strong> #{{ $order->id }}</p>
+            </td>
+        </tr>
+    </table>
+
+    <h2 class="title">PHI·∫æU XU·∫§T KHO</h2>
 
+    {{-- TH√îNG TIN KH√ÅCH H√ÄNG --}}
     <div class="info">
         <p><strong>Kh√°ch h√†ng:</strong> {{ $order->user->name ?? 'Kh√°ch l·∫ª' }}</p>
         <p><strong>Email:</strong> {{ $order->email }}</p>
+
         @if(!empty($order->order_note))
             <p><strong>Ghi ch√∫ kh√°ch h√†ng:</strong> {{ $order->order_note }}</p>
         @endif
+
         @if(!empty($order->admin_note))
             <p><strong>Ghi ch√∫ admin:</strong> {{ $order->admin_note }}</p>
         @endif
-        <p><strong>Tr·∫°ng th√°i:</strong> 
-            {{ $order->status === 'pending' ? 'Ch·ªù x·ª≠ l√Ω' : ($order->status === 'confirmed' ? 'ƒê√£ x√°c nh·∫≠n' : 'ƒê√£ h·ªßy') }}
+
+        <p><strong>Tr·∫°ng th√°i:</strong>
+            @switch($order->status)
+                @case('pending') Ch·ªù x·ª≠ l√Ω @break
+                @case('confirmed') ƒê√£ x√°c nh·∫≠n @break
+                @case('cancelled') ƒê√£ h·ªßy @break
+                @case('finished') Ho√†n t·∫•t @break
+                @default Kh√¥ng x√°c ƒë·ªãnh
+            @endswitch
         </p>
     </div>
 
-    <table>
+    {{-- DANH S√ÅCH S·∫¢N PH·∫®M --}}
+    <table class="items">
         <thead>
             <tr>
                 <th>STT</th>
-                <th>S·∫£n ph·∫©m</th>
+                <th>T√™n s·∫£n ph·∫©m</th>
+                <th>ƒêVT</th>
                 <th>S·ªë l∆∞·ª£ng</th>
-                <th>ƒê∆°n gi√°</th>
-                <th>Th√†nh ti·ªÅn</th>
+                <th>ƒê∆°n gi√° (‚Ç´)</th>
+                <th>Th√†nh ti·ªÅn (‚Ç´)</th>
             </tr>
         </thead>
         <tbody>
             @foreach($details as $index => $item)
                 <tr>
                     <td>{{ $index + 1 }}</td>
-                    <td>{{ $item['title'] ?? 'N/A' }}</td>
+                    <td>{{ $item['title'] ?? 'Ch∆∞a c√≥ t√™n' }}</td>
+                    <td>{{ $item['dvt'] ?? '-' }}</td>
                     <td>{{ $item['quantity'] ?? 0 }}</td>
-                    <td>{{ number_format($item['price'] ?? $item['total'], 0, ',', '.') }} ‚Ç´</td>
-                    <td>{{ number_format($item['total'], 0, ',', '.') }} ‚Ç´</td>
+                    <td>{{ number_format($item['don_gia'] ?? 0, 0, ',', '.') }}</td>
+                    <td>{{ number_format($item['total'] ?? 0, 0, ',', '.') }}</td>
                 </tr>
             @endforeach
         </tbody>
@@ -82,9 +147,11 @@
 
     <p class="total">T·ªïng ti·ªÅn: {{ number_format($order->total, 0, ',', '.') }} ‚Ç´</p>
 
-    <p style="text-align:center; font-size:11px; margin-top:30px;">
-        C·∫£m ∆°n qu√Ω kh√°ch ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!
-    </p>
+    {{-- FOOTER --}}
+    <div class="footer">
+        <p><em>C·∫£m ∆°n qu√Ω kh√°ch ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!</em></p>
+        <p><strong>C√îNG TY TNHH INAFO VI·ªÜT NAM</strong></p>
+    </div>
 
 </body>
 </html>
